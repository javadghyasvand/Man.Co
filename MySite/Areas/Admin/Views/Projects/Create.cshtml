@using System.Text.RegularExpressions
@using MySite.Models.Model
@model MySite.Models.ViewModel.ProjectViewModel

@{
    ViewBag.Title = "افزودن پروژه جدید";
    List<ProjectGroups> groups = ViewBag.Groups;
}
<div class="text-center m-3" dir="rtl">
    @using (Html.BeginForm("Create", "Projects", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal">
            @if (ViewBag.ErorrSelectedGroups == true)
            {
                <div class="alert alert-danger">لطفا گروه محصول را انتخاب کنید </div>
            }
            <div class="text-center">
                <div class="form-group">
                    @Html.LabelFor(model => model.TitleProject, htmlAttributes: new { @class = "control-label  text-dark" })
                    <hr/>
                    @Html.EditorFor(model => model.TitleProject, new { htmlAttributes = new { @class = "form-control  bg-light  border-light" } })
                    @Html.ValidationMessageFor(model => model.TitleProject, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LinkProject, htmlAttributes: new { @class = "control-label  text-dark" })
                    <hr/>
                    @Html.EditorFor(model => model.LinkProject, new { htmlAttributes = new { @class = "form-control  bg-light  border-light" } })
                    @Html.ValidationMessageFor(model => model.LinkProject, "", new { @class = "text-danger" })
                </div>
                <div class="form-group ">
                    @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label  text-dark" })
                    <hr/>
                    @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control  bg-light  border-light", placeholder = "کلمات کلیدی را با # جدا کنید" } })
                    @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
                </div>
                <div id="accordionOne" class="mt-4">
                    <div class="card border-primary mb-3">
                        <div id="headingOne" class="card-header p-0 border-0">
                            <h4 class="mb-0">
                                <a href="#" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne" class="text-center btn btn-light d-block text-left">
                                    انتخاب عکس
                                    انتخاب ویدیو
                                    <i class="la la-caret-square-o-down ml-5 float-left"></i>
                                </a>
                            </h4>
                        </div>
                        <div id="collapseOne" aria-labelledby="headingOne" data-parent="#accordionOne" class="collapse show">
                            <div class="card-body">
                                <div class="form-group">
                                    <div>
                                        <div class="mb-3">
                                            <input type="file" name="imageUpload" id="ImageFile" class=" bg-light"/>
                                        </div>
                                        <div>
                                            <img id="imageShow" style="width: 50%;">
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.ImageProject, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="accordionTow" class="mt-4">
                    <div class="card border-primary mb-3">
                        <div id="headingTow" class="card-header p-0 border-0">
                            <h4 class="mb-0">
                                <a href="#" data-toggle="collapse" data-target="#collapseTow" aria-expanded="true" aria-controls="collapseTow" class="text-center text-dark btn btn-light d-block text-left  ">

                                    <i class="la la-caret-square-o-down ml-5 float-left"></i>
                                </a>
                            </h4>
                        </div>
                        <div id="collapseTow" aria-labelledby="headingTow" data-parent="#accordionTow" class="collapse show">
                            <div class="card-body">
                                <div class="form-group">
                                    <div>
                                        <div class="mb-3">
                                            <input type="file" name="videoUpload" id="FileUpload" class=" bg-light"/>
                                        </div>
                                        <div>
                                            <video autoplay controls muted style="width: 50%; height: 500px">
                                                <source id="FileShow" type="video/mp4">
                                            </video>
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.VideoProject, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="accordionThree" class="mt-4">
                    <div class="card border-primary mb-3">
                        <div id="headingThree" class="card-header p-0 border-0">
                            <h4 class="mb-0">
                                <a href="#" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree" class="text-center text-dark btn btn-light d-block text-left">
                                    توضیحات
                                    <i class="la la-caret-square-o-down ml-5 float-left"></i>
                                </a>

                            </h4>
                        </div>
                        <div id="collapseThree" aria-labelledby="headingThree" data-parent="#accordionThree" class="collapse show">
                            <div class="card-body">
                                <div class="form-group">
                                    <div>
                                        @Html.EditorFor(model => model.DescriptionProject, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DescriptionProject, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label  text-dark">انتخاب گروه</label>
                    <hr/>
                    <div>
                        <ul class="d-flex align-items-center flex-wrap ">
                            @foreach (var item in groups)
                            {
                                <li>
                                    <div class="radio mr-4 mb-3 mb-md-0">
                                        <input name="groupId" type="radio" id="radio-@item.Id" value="@item.Id">
                                        <label for="radio-@item.Id">@item.GroupName</label>
                                        |
                                    </div>
                                </li>
                            }
                        </ul>
                        p
                    </div>
                </div>
                <hr/>
                <label class="control-label text-dark">سئو</label>
                <hr/>
                <div class="form-group">
                    @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label  text-dark" })
                    @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control  bg-light  border-light" } })
                    @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label  text-dark" })
                    @Html.EditorFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control  bg-light  border-light" } })
                    @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label  text-dark" })
                    @Html.EditorFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control  bg-light  border-light" } })
                    @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group m-5">
                <div class="col-md-offset-2 col-md-10 ">
                    <button type="submit" class="btn btn-outline-success waves-effect waves-green">ذخیره</button>
                    <a href="@Url.Action("Index")" class="btn btn-outline-danger waves-effect waves-green">بازگشت</a>
                </div>
            </div>
        </div>
    }
</div>

@section scripts
{
    <script>
        CKEDITOR.replace('DescriptionProject');
        $('document').ready(function () {
            $("#FileUpload").change(function () {
                if (this.files && this.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#FileShow').attr('src', e.target.result);
                        $('video')[0].load();
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });
            $("#ImageFile").change(function () {
                if (this.files && this.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imageShow').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });
        });
    </script>
}

<style>
    input[type="file"]::file-selector-button {
        border: 2px solid #2863EC;
        padding: 0.2em 0.4em;
        border-radius: 0.2em;
        background-color: #2863EC;
        transition: 1s;
        color: #ffff
    }
</style>